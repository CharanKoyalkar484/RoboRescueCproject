
main.elf:     file format elf32-littlearm
main.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000001c5

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00000304 memsz 0x00000304 flags r-x
    LOAD off    0x00010000 vaddr 0x10000000 paddr 0x10000000 align 2**15
         filesz 0x00000000 memsz 0x00000400 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000304  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stack        00000400  10000000  10000000  00010000  2**0
                  ALLOC
  2 .debug_frame  00000020  00000000  00000000  00008304  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .comment      00000070  00000000  00000000  00008324  2**0
                  CONTENTS, READONLY
  4 .ARM.attributes 00000031  00000000  00000000  00008394  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
10000000 l    d  .stack	00000000 .stack
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    df *ABS*	00000000 cortex_startup.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 timer.c
00000000 l    df *ABS*	00000000 sw-uart.c
00000000 l    df *ABS*	00000000 _divsi3.o
0000021c l       .text	00000000 .divsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 
10000000 l       .text	00000000 __ram_start
10001000 l       *ABS*	00000000 __ram_end
00000304 l       .stack	00000000 __exidx_end
00000304 l       .stack	00000000 __exidx_start
00008000 l       *ABS*	00000000 __rom_end
00000000 l       *ABS*	00000000 __process_stack_size
00008000 l       *ABS*	00000000 __rom_size
10001000 l       *ABS*	00000000 __heap_end
00001000 l       *ABS*	00000000 __ram_size
10000400 l       .stack	00000000 __heap_start
00000000 l       .text	00000000 __rom_start
00000400 l       *ABS*	00000000 __main_stack_size
0000017a g     F .text	00000018 uart_put_int_decimal
00000090 g     F .text	0000000c now
00000192 g     F .text	00000016 uart_put_int_hexadecimal_digit
00000000 g       .text	00000000 __text_start
000000c4 g     F .text	00000018 txd_high
10000400 g       .stack	00000000 __process_stack_end
10000400 g       .stack	00000000 __process_stack_start
00000304 g       *ABS*	00000000 __data_init_start
10000400 g       .stack	00000000 __main_stack_end
10000000 g       .text	00000000 __bss_end
10000000 g       .stack	00000000 __stack_start
00000068 g     F .text	00000028 timer_init
00000218 g     F .text	00000000 .hidden __aeabi_idiv
000000f8 g     F .text	00000048 uart_put_char
000000dc g     F .text	0000001c uart_init
000000ac g     F .text	00000018 txd_low
00000000 g     O .text	00000020 __vectors
10000000 g       .text	00000000 __data_end
000001c4 g     F .text	00000054 __startup
000001a8 g     F .text	0000001c uart_put_int_hexadecimal
000002d8  w    F .text	00000002 .hidden __aeabi_ldiv0
10000400 g       .stack	00000000 __stack_end
00000304 g       .text	00000000 __text_end
10000000 g       .text	00000000 __bss_start
00000140 g     F .text	00000014 uart_put_string
00000020 g     F .text	00000048 main
0000009c g     F .text	00000010 await
10000000 g       .stack	00000000 __main_stack_start
00000218 g     F .text	000000ac .hidden __divsi3
00000154 g     F .text	00000026 uart_put_int_negative
000002d8  w    F .text	00000002 .hidden __aeabi_idiv0
10000000 g       .text	00000000 __data_start
000002c4 g     F .text	00000012 .hidden __aeabi_idivmod


