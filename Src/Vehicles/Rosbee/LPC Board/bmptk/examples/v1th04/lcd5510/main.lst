	.cpu cortex-m0
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 4
	.eabi_attribute 34, 0
	.eabi_attribute 18, 4
	.code	16
	.file	"main.c"
	.section	.text.rand,"ax",%progbits
	.align	1
	.global	rand
	.code	16
	.thumb_func
	.type	rand, %function
rand:
	ldr	r3, .L2
	ldr	r0, .L2+4
	ldr	r2, [r3]
	@ sp needed
	mul	r0, r2
	ldr	r2, .L2+8
	add	r0, r0, r2
	str	r0, [r3]
	lsl	r0, r0, #1
	lsr	r0, r0, #17
	bx	lr
.L3:
	.align	2
.L2:
	.word	.LANCHOR0
	.word	214013
	.word	2531011
	.size	rand, .-rand
	.global	__aeabi_uidivmod
	.section	.text.random_in_range,"ax",%progbits
	.align	1
	.global	random_in_range
	.code	16
	.thumb_func
	.type	random_in_range, %function
random_in_range:
	push	{r3, r4, r5, lr}
	mov	r4, r0
	mov	r5, r1
	sub	r5, r5, r4
	bl	rand
	add	r1, r5, #1
	bl	__aeabi_uidivmod
	@ sp needed
	add	r0, r1, r4
	pop	{r3, r4, r5, pc}
	.size	random_in_range, .-random_in_range
	.section	.text.startup.main,"ax",%progbits
	.align	1
	.global	main
	.code	16
	.thumb_func
	.type	main, %function
main:
	push	{r4, r5, r6, r7, lr}
	sub	sp, sp, #20
	bl	timer_init
	bl	lcd5510_init
.L11:
	bl	lcd5510_clear
	mov	r4, #0
.L7:
	mov	r0, r4
	mov	r1, #0
	mov	r2, #1
	bl	lcd5510_write
	mov	r0, r4
	mov	r1, #47
	mov	r2, #1
	add	r4, r4, #1
	bl	lcd5510_write
	cmp	r4, #84
	bne	.L7
	mov	r4, #0
.L9:
	mov	r1, r4
	mov	r0, #0
	mov	r2, #1
	bl	lcd5510_write
	mov	r1, r4
	mov	r0, #83
	mov	r2, #1
	add	r4, r4, #1
	bl	lcd5510_write
	cmp	r4, #48
	bne	.L9
	mov	r4, #30
.L12:
	bl	rand
	mov	r7, r0
	bl	rand
	mov	r5, r0
	bl	rand
	mov	r6, r0
	bl	rand
	mov	r1, #85
	str	r0, [sp, #12]
	mov	r0, r7
	bl	__aeabi_uidivmod
	mov	r0, r6
	mov	r7, r1
	mov	r1, #49
	bl	__aeabi_uidivmod
	mov	r0, r5
	mov	r6, r1
	mov	r1, #85
	bl	__aeabi_uidivmod
	ldr	r0, [sp, #12]
	mov	r5, r1
	mov	r1, #49
	bl	__aeabi_uidivmod
	mov	r2, #1
	mov	r3, r1
	str	r2, [sp]
	mov	r1, r6
	mov	r2, r5
	mov	r0, r7
	bl	lcd5510_line
	bl	now
	ldr	r3, .L14
	sub	r4, r4, #1
	add	r0, r0, r3
	bl	await
	cmp	r4, #0
	bne	.L12
	b	.L11
.L15:
	.align	2
.L14:
	.word	500000
	.size	main, .-main
	.section	.bss.n.4078,"aw",%nobits
	.align	2
	.set	.LANCHOR0,. + 0
	.type	n.4078, %object
	.size	n.4078, 4
n.4078:
	.space	4
	.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.3 20140228 (release) [ARM/embedded-4_8-branch revision 208322]"
