
main.elf:     file format elf32-littlearm
main.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000003dd

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x000004d0 memsz 0x000004d0 flags r-x
    LOAD off    0x00010000 vaddr 0x10000000 paddr 0x10000000 align 2**15
         filesz 0x00000000 memsz 0x00000600 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004d0  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          000001fc  10000000  10000000  00010000  2**2
                  ALLOC
  2 .stack        00000404  100001fc  100001fc  00010000  2**0
                  ALLOC
  3 .debug_frame  00000020  00000000  00000000  000084d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000070  00000000  00000000  000084f0  2**0
                  CONTENTS, READONLY
  5 .ARM.attributes 00000031  00000000  00000000  00008560  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
10000000 l    d  .bss	00000000 .bss
100001fc l    d  .stack	00000000 .stack
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    df *ABS*	00000000 cortex_startup.c
00000000 l    df *ABS*	00000000 lcd5510.c
00000000 l    df *ABS*	00000000 timer.c
00000000 l    df *ABS*	00000000 main.c
10000000 l     O .bss	00000004 n.4078
00000000 l    df *ABS*	00000000 _udivsi3.o
00000434 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 
10000000 l       .text	00000000 __ram_start
10001000 l       *ABS*	00000000 __ram_end
000004d0 l       .bss	00000000 __exidx_end
000004d0 l       .bss	00000000 __exidx_start
00008000 l       *ABS*	00000000 __rom_end
00000000 l       *ABS*	00000000 __process_stack_size
00008000 l       *ABS*	00000000 __rom_size
10001000 l       *ABS*	00000000 __heap_end
00001000 l       *ABS*	00000000 __ram_size
10000600 l       .stack	00000000 __heap_start
00000000 l       .text	00000000 __rom_start
00000400 l       *ABS*	00000000 __main_stack_size
000002f0 g     F .text	0000000c now
00000000 g       .text	00000000 __text_start
10000600 g       .stack	00000000 __process_stack_end
000001f8 g     F .text	0000002c lcd5510_clear
00000430 g     F .text	00000088 .hidden __udivsi3
00000224 g     F .text	000000a8 lcd5510_line
10000600 g       .stack	00000000 __process_stack_start
000004d0 g       *ABS*	00000000 __data_init_start
10000600 g       .stack	00000000 __main_stack_end
100001fc g       .bss	00000000 __bss_end
000000b4 g     F .text	0000001e lcd5510_pixels
10000200 g       .stack	00000000 __stack_start
000002cc g     F .text	00000024 timer_init
10000004 g     O .bss	000001f8 lcd5510_buf
00000100 g     F .text	000000b8 lcd5510_init
00000038 g     F .text	00000010 wait
00000074 g     F .text	00000020 lcd5510_command
0000030c g     F .text	00000020 rand
000000d4 g     F .text	0000002c configure_this_pin_as_gpio
00000000 g     O .text	00000020 __vectors
10000000 g       .text	00000000 __data_end
000003dc g     F .text	00000054 __startup
000004cc  w    F .text	00000002 .hidden __aeabi_ldiv0
10000600 g       .stack	00000000 __stack_end
000004d0 g       .text	00000000 __text_end
000001b8 g     F .text	00000040 lcd5510_write
10000000 g       .bss	00000000 __bss_start
0000032c g     F .text	000000b0 main
000002fc g     F .text	00000010 await
00000430 g     F .text	00000000 .hidden __aeabi_uidiv
10000200 g       .stack	00000000 __main_stack_start
00000094 g     F .text	00000020 lcd5510_data
00000020 g     F .text	00000018 sdin_set
000004b8 g     F .text	00000012 .hidden __aeabi_uidivmod
00000048 g     F .text	0000002c lcd5510_send_byte
000004cc  w    F .text	00000002 .hidden __aeabi_idiv0
10000000 g       .text	00000000 __data_start


